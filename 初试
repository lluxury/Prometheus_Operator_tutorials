
建设要监控的实例：
vi sample_app.yaml
kubectl apply -f sample_app.yaml
kubectl apply -f sample_app_svc.yaml
kubectl apply -f sample_ServiceM.yaml

kubectl get ServiceMonitor -A
default     sample-monitor   64s

实例及服务监控基本建立


下面确认权限问题
kubectl get sa -A >> env_sa_0


建立 serviceMonitor prometheus

kubectl get -n default prometheus prometheus -w
NAME         VERSION   DESIRED   READY   RECONCILED   AVAILABLE   AGE
prometheus                       1       True         True        5m18s


所有yaml 执行完后，建立了pod及svc的监控关系(业务以svc为主)，最后再建一个 expose 把prometheus服务（9090）外放出来
因为是linxu 服务器环境，还要用 nginx做一个反代

curl -i http://192.168.39.221:30900/graph


server {
    listen 80;
    server_name prometheusyann.com;

    location / {
        proxy_pass http://192.168.39.221:30900;  # 将请求转发给本地的Web应用服务器
        proxy_set_header Host $host;       # 传递原始主机头
        proxy_set_header X-Real-IP $remote_addr;  # 传递原始客户端IP
    }
}

可以看到监控面板了





问题：
有些组件看不到，同类型下名字是唯一的，文档上的例子给的不太好
kubectl get prometheus --all-namespaces
NAMESPACE   NAME            VERSION   DESIRED   READY   RECONCILED   AVAILABLE   AGE
default     prometheus                          1       True         True        4h14m
default     prometheus-pm                       0       True         False       16s
default     prometheus-sm                       0       True         False       8s

注意要显性标记 标签prometheus: prometheus ，否则默认会跟名字走
ServiceMonitor,PodMonitor 都会新起一个pod
分开写配置文件会同名被冲掉，把2个配置写在一个文件就好（但要注意匹配规则，一样会出现数据重叠!!）
